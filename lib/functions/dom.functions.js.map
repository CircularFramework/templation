{"version":3,"sources":["../../src/functions/dom.functions.js"],"names":["createTemporaryDOM","template","data","directives","tempDOM","cloneNode","parseDirectives","filter","dir","isPre","content","virtualizeDOM","element","vElement","type","nodeName","props","children","value","includes","nodeValue","attributes","i","length","a","push","name","childNodes","forEach","c","updateDOM","parent","newNode","oldNode","index","newDOMNode","createElement","appendChild","removeChild","hasChanged","replaceChild","updateProps","newLength","oldLength","node1","node2","dirs","sort","b","order","selectors","subSelectors","selector","ss","directiveElement","querySelector","details","getDirectiveDetails","parser","directive","replace","isPost","toLowerCase","attrVal","getAttribute","removeAttribute","subSelector","split","node","document","createTextNode","createComment","$el","setProps","map","bind","isEventProp","prop","test","setProp","target","setAttribute","removeProp","newProps","oldProps","match","find","p","emptyElement","firstChild"],"mappings":"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","file":"dom.functions.js","sourcesContent":["/** import functions */\nimport { using } from './using.function';\nimport { templater } from './templater.function';\n\n/** create a temporary DOM object based on the template */\nfunction createTemporaryDOM(template, data, directives) {\n\t/** create new template */\n\tlet tempDOM = template.cloneNode(true);\n\n\t/** cycle through pre directives */\n\tparseDirectives(directives.filter(dir => dir.isPre()), tempDOM.content, data);\n\n\t/** replace simple template values */\n\ttemplater(tempDOM, data);\n\n\t/** return the virtual DOM */\n\treturn tempDOM;\n}\n\n/** virtualize the passed DOM element */\nfunction virtualizeDOM(element) {\n\tlet vElement = { type: element.nodeName, props: [], children: [], value: '' };\n\tif (['#text', '#comment'].includes(element.nodeName)) vElement.value = element.nodeValue;\n\n\tif (element.attributes) {\n\t\tfor (let i = 0; i < element.attributes.length; i++) {\n\t\t\tlet a = element.attributes[i];\n\t\t\tvElement.props.push({ 'name': a.name, 'value': a.value });\n\t\t}\n\t}\n\n\tif (element.childNodes) {\n\t\telement.childNodes.forEach(c => {\n\t\t\tvElement.children.push(virtualizeDOM(c));\n\t\t});\n\t}\n\n\treturn vElement;\n}\n\n/** update the given parent with new virtual DOM nodes */\nfunction updateDOM(parent, newNode, oldNode, index) {\n\tif (!index) index = 0;\n\n\tif (!oldNode) {\n\t\tif (newNode) {\n\t\t\tlet newDOMNode = createElement(newNode);\n\t\t\tparent.appendChild(newDOMNode);\n\t\t}\n\t} else if (!newNode) {\n\t\tparent.removeChild(parent.childNodes[index]);\n\t} else if (hasChanged(newNode, oldNode)) {\n\t\tlet newDOMNode = createElement(newNode);\n\t\tparent.replaceChild(newDOMNode, parent.childNodes[index]);\n\t} else if (newNode.type) {\n\t\tupdateProps(parent.childNodes[index], newNode.props, oldNode.props);\n\n\t\tconst newLength = newNode.children.length;\n\t\tconst oldLength = oldNode.children.length;\n\t\t\n\t\t/** check for less new than old */\n\t\tif (newLength < oldLength) {\n\t\t\t/** get all the old elements that are past the new */\n\t\t\tlet children = [];\n\t\t\tfor (let i = newLength; i < oldLength; i++) {\n\t\t\t\tchildren.push(parent.childNodes[index].childNodes[i]);\n\t\t\t}\n\n\t\t\t/** remove old elements */\n\t\t\tchildren.forEach(c => parent.childNodes[index].removeChild(c));\n\t\t}\n\n\t\t/** compare all new nodes */\n\t\tfor (let i = 0; i < newLength; i++) {\n\t\t\tupdateDOM(parent.childNodes[index], newNode.children[i], oldNode.children[i], i);\n\t\t}\n\t}\n}\n\n/** check to see if has changed */\nfunction hasChanged(node1, node2) {\n\treturn (typeof node1 !== typeof node2) || (node1.type !== node2.type) || (['#text', '#comment'].includes(node1.type) && node1.value !== node2.value);\n}\n\n/** find references to the given directives on the given element and parse */\nfunction parseDirectives(dirs, element, data) {\n\t/** sort the directives */\n\tdirs.sort(function(a, b) {\n\t\treturn a.order - b.order;\n\t});\n\n\t/** execute each directive */\n\tdirs.forEach(dir => {\n\t\t/** create an array of selectors */\n\t\tlet selectors = [];\n\n\t\t/** check for sub selectors */\n\t\tif (dir.subSelectors.length > 0) {\n\t\t\t/** cycle thru sub selectors */\n\t\t\tdir.subSelectors.forEach(ss => {\n\t\t\t\t/** add the selector with sub selector */\n\t\t\t\tselectors.push(`${dir.selector}\\\\:${ss}`);\n\t\t\t});\n\t\t} else {\n\t\t\t/** add the single selector */\n\t\t\tselectors.push(dir.selector);\n\t\t}\n\n\t\t/** cycle through selectors */\n\t\tselectors.forEach(selector => {\n\t\t\t/** initialize the directive elements */\n\t\t\tlet directiveElement;\n\t\t\twhile ((directiveElement = element.querySelector(`[${selector}]`)) !== null) {\n\t\t\t\tlet details = getDirectiveDetails(directiveElement, dir, selector);\n\t\t\t\tdir.parser(details, directiveElement, data);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/** get the attribute name (selector), sub selector, and value of a directive */\nfunction getDirectiveDetails(element, directive, selector) {\n\t/** initialize the details */\n\tlet details = { 'value': null, 'subSelector': null };\n\n\t/** get the selector */\n\tselector = selector.replace('\\\\', '');\n\tif (directive.isPost()) selector = selector.toLowerCase();\n\n\t/** get the attribute value expression, and remove the attribute */\n\tvar attrVal = element.getAttribute(selector);\n\telement.removeAttribute(selector);\n\n\t/** set details */\n\tdetails.value = attrVal;\n\n\t/** check for sub selector */\n\tif (selector.includes(':')) details.subSelector = selector.split(':')[1];\n\n\t/** return the details */\n\treturn details;\n}\n\n/** create a DOM element based on the virtual DOM node passed */\nfunction createElement(node) {\n\tif (node.type === '#text') {\n\t\treturn document.createTextNode(node.value);\n\t}\n\tif (node.type === '#comment') {\n\t\treturn document.createComment(node.value);\n\t}\n\tconst $el = document.createElement(node.type);\n\tsetProps($el, node.props);\n\tnode.children.map(createElement).forEach($el.appendChild.bind($el));\n\treturn $el;\n}\n\n/** check this property to see if it is an event property */\nfunction isEventProp(prop) {\n\treturn /^cron:/.test(prop.name);\n}\n\n/** set a target element's property value */\nfunction setProp(target, prop) {\n\ttarget.setAttribute(prop.name, prop.value);\n}\n\n/** set multiple property values on a target element */\nfunction setProps(target, props) {\n\tprops.forEach(prop => {\n\t\tsetProp(target, prop);\n\t});\n}\n\n/** remove a property from a target element */\nfunction removeProp(target, prop) {\n\ttarget.removeAttribute(prop.name);\n}\n\n/** update the properties on a target element */\nfunction updateProps(target, newProps, oldProps) {\n\tnewProps.forEach(prop => {\n\t\tlet match = oldProps.find(p => p.name === prop.name);\n\t\tif (match) {\n\t\t\tif (match.value !== prop.value) setProp(target, prop); // update\n\t\t} else {\n\t\t\tif (!isEventProp(prop)) {\n\t\t\t\tsetProp(target, prop); // add new\n\t\t\t}\n\t\t}\n\t});\n\toldProps.forEach(prop => {\n\t\tlet match = newProps.find(p => p.name === prop.name);\n\t\tif (!match) {\n\t\t\tremoveProp(target, prop);\n\t\t}\n\t});\n}\n\n/** empty an element of all children */\nfunction emptyElement(element) {\n\twhile (element.firstChild) element.removeChild(element.firstChild);\n};\n\n/** export the DOM related functions */\nexport {\n\tcreateTemporaryDOM,\n\tvirtualizeDOM,\n\tupdateDOM,\n\thasChanged,\n\tparseDirectives,\n\tcreateElement,\n\tisEventProp,\n\tsetProp,\n\tsetProps,\n\tremoveProp,\n\tupdateProps,\n\temptyElement\n};"]}
{"version":3,"sources":["../../src/functions/templater.function.js"],"names":["templater","template","data","html","innerHTML","re","match","exec","replace","lastIndex","ex","console","log"],"mappings":";;;;;;;AACA;;AAEA;AACA,SAASA,SAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AAClC;AACA,KAAIC,OAAOF,SAASG,SAApB;;AAEA;AACA,KAAMC,KAAK,yBAAX;;AAEA;AACA,KAAIC,cAAJ;AACA,QAAO,CAACA,QAAQD,GAAGE,IAAH,CAAQJ,IAAR,CAAT,MAA4B,IAAnC,EAAyC;AACxC;AACA,MAAI;AACH;AACAA,UAAOA,KAAKK,OAAL,CAAaF,MAAM,CAAN,CAAb,EAAuB,kBAAMJ,IAAN,EAAYI,MAAM,CAAN,CAAZ,CAAvB,CAAP;AACAD,MAAGI,SAAH,GAAe,CAAf;AACA,GAJD,CAIE,OAAOC,EAAP,EAAW;AACZC,WAAQC,GAAR,CAAYF,EAAZ;AACA;AACD;;AAED;AACAT,UAASG,SAAT,GAAqBD,IAArB;AACA;;AAED;AA5BA;QA6BSH,S,GAAAA,S","file":"templater.function.js","sourcesContent":["/** import functions */\nimport { using } from './using.function';\n\n/** do some simple template parsing/value replacing */\nfunction templater(template, data) {\n\t/** get the html */\n\tlet html = template.innerHTML;\n\n\t/** set the pattern for replacement */\n\tconst re = /{{\\s?([\\w\\W]*?)\\s?}}/gmi;\n\n\t/** cycle over matches */\n\tlet match;\n\twhile ((match = re.exec(html)) !== null) {\n\t\t/** catch exceptions */\n\t\ttry {\n\t\t\t/** replace the values in the html and reset the lastIndex of the regex */\n\t\t\thtml = html.replace(match[0], using(data, match[1]));\n\t\t\tre.lastIndex = 0;\n\t\t} catch (ex) {\n\t\t\tconsole.log(ex);\n\t\t}\n\t}\n\n\t/** reset the innerHTML */\n\ttemplate.innerHTML = html;\n}\n\n/** export function */\nexport { templater };"]}
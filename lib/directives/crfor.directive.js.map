{"version":3,"sources":["../../src/directives/crfor.directive.js"],"names":["crForDirective","forIterator","details","forElement","data","forHTML","forAttrVal","value","split","entityRef","entityProp","getDataProperty","Function","property","Array","isArray","forEach","p","i","virtualDOM","cloneNode","modifyNode","el","outerHTML","length","parentNode","removeChild","node","type","expression","exRe","RegExp","exec","match","re","pre","substring","index","mid","post","props","children","c"],"mappings":"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","file":"crfor.directive.js","sourcesContent":["/** import dependencies */\nimport { Directive } from '../classes/directive.class';\nimport { virtualizeDOM, createElement } from '../functions';\n\n/** create the directive */\nconst crForDirective = new Directive('crFor', forIterator);\n\n/** export the directive */\nexport { crForDirective };\n\n/** define the directive parser function */\nfunction forIterator(details, forElement, data) {\n\t/** initialize the forHTML */\n\tlet forHTML = '';\n\n\t/** get the for attribute value expression */\n\tvar forAttrVal = details.value.split(' ');\n\tvar entityRef = forAttrVal[0];\n\tvar entityProp = forAttrVal[2];\n\n\t/** get the data property */\n\tlet getDataProperty = new Function('obj', `\n\t\treturn (obj.${entityProp});\n\t`);\n\n\t/** check the entityProperty type */\n\tlet property = getDataProperty(data);\n\n\t/** check for array */\n\tif (Array.isArray(property)) {\n\t\t/** go thru each array item */\n\t\tproperty.forEach((p, i) => {\n\t\t\t/** virtualize the for element */\n\t\t\tlet virtualDOM = virtualizeDOM(forElement.cloneNode(true));\n\n\t\t\t/** create html for each item */\n\t\t\tmodifyNode(virtualDOM, entityRef, `${entityProp}[${i}]`);\n\n\t\t\t/** add the html */\n\t\t\tlet el = createElement(virtualDOM);\n\t\t\tforHTML += el.outerHTML;\n\t\t});\n\t}\n\t\n\t/** check for create for html, otherwise remove from DOM */\n\tif (forHTML.length > 0) forElement.outerHTML = forHTML;\n\telse forElement.parentNode.removeChild(forElement);\n}\n\n/** adjust child attributes */\nfunction modifyNode(node, entityRef, entityProp) {\n\t/** adjust value */\n\tif (node.type === '#text') {\n\t\t/** first match the expressions */\n\t\tlet expression;\n\t\tlet exRe = new RegExp('({{[^}}]*}})', 'g');\n\t\twhile ((expression = exRe.exec(node.value)) !== null) {\n\t\t\t/** match the entity references */\n\t\t\tlet match;\n\t\t\tlet re = new RegExp(`(\\\\b${entityRef}\\\\b)`, 'g');\n\t\t\twhile ((match = re.exec(expression[1])) !== null) {\n\t\t\t\t/** re-assemble property values */\n\t\t\t\tlet pre = expression[1].substring(0, match.index);\n\t\t\t\tlet mid = entityProp;\n\t\t\t\tlet post = expression[1].substring((match.index + entityRef.length));\n\t\t\t\texpression[1] = `${pre}${mid}${post}`;\n\t\t\t}\n\n\t\t\t/** re-assemble property values */\n\t\t\tlet pre = node.value.substring(0, expression.index);\n\t\t\tlet mid = expression[1];\n\t\t\tlet post = node.value.substring((expression.index + expression[0].length));\n\t\t\tnode.value = `${pre}${mid}${post}`;\n\t\t}\n\t}\n\n\t/** adjust property values */\n\tnode.props.forEach(p => {\n\t\tlet match;\n\t\tlet re = new RegExp(`(\\\\b${entityRef}\\\\b)`, 'g');\n\t\twhile ((match = re.exec(p.value)) !== null) {\n\t\t\t/** re-assemble property values */\n\t\t\tlet pre = p.value.substring(0, match.index);\n\t\t\tlet mid = entityProp;\n\t\t\tlet post = p.value.substring((match.index + entityRef.length));\n\t\t\tp.value = `${pre}${mid}${post}`;\n\t\t}\n\t});\n\n\t/** adjust all child node properties */\n\tnode.children.forEach(c => modifyNode(c, entityRef, entityProp));\n}"]}
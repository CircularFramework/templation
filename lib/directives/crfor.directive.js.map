{"version":3,"sources":["../../src/directives/crfor.directive.js"],"names":["crForDirective","forIterator","details","forElement","data","forHTML","forAttrVal","value","split","entityRef","entityProp","getDataProperty","Function","property","Array","isArray","forEach","p","i","virtualDOM","cloneNode","modifyNode","el","outerHTML","length","parentNode","removeChild","node","type","expression","exRe","RegExp","exec","match","re","pre","substring","index","mid","post","props","children","c"],"mappings":"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","file":"crfor.directive.js","sourcesContent":["/** import dependencies */\nimport { Directive } from '../classes/directive.class';\nimport { virtualizeDOM, createElement } from '../functions';\n\n/** create the directive */\nconst crForDirective = new Directive('crFor', forIterator);\n\n/** export the directive */\nexport { crForDirective };\n\n/** define the directive parser function */\nfunction forIterator(details, forElement, data) {\n\t/** initialize the forHTML */\n\tlet forHTML = '';\n\n\t/** get the for attribute value expression */\n\tvar forAttrVal = details.value.split(' ');\n\tvar entityRef = forAttrVal[0];\n\tvar entityProp = forAttrVal[2];\n\n\t/** get the data property */\n\tlet getDataProperty = new Function('obj', `\n\t\treturn (obj.${entityProp});\n\t`);\n\n\t/** check the entityProperty type */\n\tlet property = getDataProperty(data);\n\n\t/** check for array */\n\tif (Array.isArray(property)) {\n\t\t/** go thru each array item */\n\t\tproperty.forEach((p, i) => {\n\t\t\t/** virtualize the for element */\n\t\t\tlet virtualDOM = virtualizeDOM(forElement.cloneNode(true));\n\n\t\t\t/** create html for each item */\n\t\t\tmodifyNode(virtualDOM, entityRef, `${entityProp}[${i}]`);\n\n\t\t\t/** add the html */\n\t\t\tlet el = createElement(virtualDOM);\n\t\t\tforHTML += el.outerHTML;\n\t\t});\n\t}\n\t\n\t/** check for create for html, otherwise remove from DOM */\n\tif (forHTML.length > 0) forElement.outerHTML = forHTML;\n\telse forElement.parentNode.removeChild(forElement);\n}\n\n/** adjust child attributes */\nfunction modifyNode(node, entityRef, entityProp) {\n\t/** adjust value */\n\tif (node.type === '#text') {\n\t\t/** first match the expressions */\n\t\tlet expression;\n\t\tlet exRe = new RegExp('({{[^}}]*}})', 'g');\n\t\twhile ((expression = exRe.exec(node.value)) !== null) {\n\t\t\t/** match the entity references */\n\t\t\tlet match;\n\t\t\tlet re = new RegExp(`(\\\\b${entityRef}\\\\b)`, 'g');\n\t\t\twhile ((match = re.exec(expression[1])) !== null) {\n\t\t\t\t/** re-assemble property values */\n\t\t\t\tlet pre = expression[1].substring(0, match.index);\n\t\t\t\tlet mid = entityProp;\n\t\t\t\tlet post = expression[1].substring((match.index + entityRef.length));\n\t\t\t\texpression[1] = `${pre}${mid}${post}`;\n\t\t\t}\n\n\t\t\t/** re-assemble property values */\n\t\t\tlet pre = node.value.substring(0, expression.index);\n\t\t\tlet mid = expression[1];\n\t\t\tlet post = node.value.substring((expression.index + expression[0].length));\n\t\t\tnode.value = `${pre}${mid}${post}`;\n\t\t}\n\t}\n\n\t/** adjust property values */\n\tnode.props.forEach(p => {\n\t\tlet match;\n\t\tlet re = new RegExp(`(\\\\b${entityRef}\\\\b)`, 'g');\n\t\twhile ((match = re.exec(p.value)) !== null) {\n\t\t\t/** re-assemble property values */\n\t\t\tlet pre = p.value.substring(0, match.index);\n\t\t\tlet mid = entityProp;\n\t\t\tlet post = p.value.substring((match.index + entityRef.length));\n\t\t\tp.value = `${pre}${mid}${post}`;\n\t\t}\n\t});\n\n\t/** adjust all child node properties */\n\tnode.children.forEach(c => modifyNode(c, entityRef, entityProp));\n}"]}
{"version":3,"sources":["../../src/classes/directive.class.js"],"names":["Directive","selector","parser","subSelectors","_order","setOrder","order","getOrder","_pre","setPre","pre","isPre","_post","setPost","post","isPost"],"mappings":"itBAAA;;;;;MAMMA,U,YACL,mBAAYC,QAAZ,CAAsBC,MAAtB,CAA8B,gDAC7B,wBAEA,2DACA,KAAKD,QAAL,CAAgBA,QAAhB,CAEA,yEACA,KAAKC,MAAL,CAAcA,MAAd,CAEA,6HACA,KAAKC,YAAL,CAAoB,EAApB,CAEA,yBAEA,iGACA,GAAIC,QAAS,CAAb,CACA,KAAKC,QAAL,CAAgB,SAACC,KAAD,CAAW,CAC1BF,OAASE,KAAT,CACA,YACA,CAHD,CAIA,KAAKC,QAAL,CAAgB,UAAM,CAAE,MAAOH,OAAS,CAAxC,CAEA,yGACA,GAAII,MAAO,IAAX,CACA,KAAKC,MAAL,CAAc,SAACC,GAAD,CAAS,CACtBF,KAAOE,GAAP,CACA,YACA,CAHD,CAIA,KAAKC,KAAL,CAAa,UAAM,CAAE,MAAOH,KAAO,CAAnC,CAEA,wGACA,GAAII,OAAQ,KAAZ,CACA,KAAKC,OAAL,CAAe,SAACC,IAAD,CAAU,CACxBF,MAAQE,IAAR,CACA,YACA,CAHD,CAIA,KAAKC,MAAL,CAAc,UAAM,CAAE,MAAOH,MAAQ,CACrC,CAED,qBAEA;;;;kFAKgBT,Y,CAAc,CAC7B,KAAKA,YAAL,CAAoBA,YAApB,CACA,MAAO,KACP,C,wBAGF,uB,QACSH,S,CAAAA,S","file":"directive.class.js","sourcesContent":["/**\n * @class Directive\n * Defines a directive that Templation will search for in the template and parse\n * @param {string} selector The selector that will be used in the directive (ex: crFor)\n * @param {function} parser The function that will be executed for the directive. The parser receives a reference to the directive, the effected element, and the associated data\n */\nclass Directive {\n\tconstructor(selector, parser) {\n\t\t/** public properties */\n\n\t\t/** @public {string} The selector name for the directive */\n\t\tthis.selector = selector;\n\t\t\n\t\t/** @public {function} The function that is executed for the directive */\n\t\tthis.parser = parser;\n\t\n\t\t/** @public {string[]} An array of sub selectors. Referenced by using a colon (:) after the main selector (ex: crOn:click) */\n\t\tthis.subSelectors = [];\n\t\n\t\t/** private properties */\n\n\t\t/** @private {number} A number indicating the order in which the directive should be processed */\n\t\tlet _order = 0;\n\t\tthis.setOrder = (order) => {\n\t\t\t_order = order;\n\t\t\treturn this;\n\t\t};\n\t\tthis.getOrder = () => { return _order; };\n\t\t\n\t\t/** @private {boolean} A boolean indicating if this directive should be processed before DOM insertion */\n\t\tlet _pre = true;\n\t\tthis.setPre = (pre) => {\n\t\t\t_pre = pre;\n\t\t\treturn this;\n\t\t};\n\t\tthis.isPre = () => { return _pre; };\n\n\t\t/** @private {boolean} A boolean indicating if this directive should be processed after DOM insertion */\n\t\tlet _post = false;\n\t\tthis.setPost = (post) => {\n\t\t\t_post = post;\n\t\t\treturn this;\n\t\t};\n\t\tthis.isPost = () => { return _post; };\n\t}\n\n\t/** public methods */\n\n\t/**\n\t * @method Set the sub selectors\n\t * @param {string[]} An array of strings to function as sub selectors\n\t * @returns {Directive}\n\t */\n\tsetSubSelectors(subSelectors) {\n\t\tthis.subSelectors = subSelectors;\n\t\treturn this;\n\t}\n}\n\n/** export Directive */\nexport { Directive };"]}